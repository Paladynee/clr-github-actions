# Begin Function AIR: start.posixCallMainAndExit:
# Total AIR+Liveness bytes: 4.7744140625KiB
# AIR Instructions:         285 (2.5048828125KiB)
# AIR Extra Data:           425 (1.66015625KiB)
# Liveness tomb_bits:       144B
# Liveness Extra Data:      52 (208B)
# Liveness special table:   21 (168B)
  %0 = arg([*]usize, "argc_argv_ptr")
  %1!= dbg_stmt(6:31)
  %2 = ptr_elem_val(%0, @Air.Inst.Ref.zero_usize)
  %3!= dbg_var_val(%2, "argc")
  %4!= dbg_stmt(7:57)
  %6 = ptr_add([*]usize, %0!, @Air.Inst.Ref.one_usize)
  %7!= dbg_stmt(7:34)
  %8 = bitcast([*][*:0]u8, %6!)
  %9!= dbg_var_val(%8, "argv")
  %10!= dbg_stmt(9:70)
  %12 = ptr_add([*][*:0]u8, %8, %2)
  %13!= dbg_stmt(9:77)
  %14 = ptr_add([*][*:0]u8, %12!, @Air.Inst.Ref.one_usize)
  %15!= dbg_stmt(9:45)
  %16 = bitcast([*:null]?[*:0]u8, %14!)
  %17!= dbg_var_val(%16, "envp_optional")
  %18!= dbg_stmt(10:5)
  %19 = alloc(*usize)
  %20!= store(%19, @Air.Inst.Ref.zero_usize)
  %21!= dbg_var_ptr(%19, "envp_count")
  %22!= block(void, {
    %23!= loop(noreturn, {
      %24!= block(void, {
        %25!= dbg_stmt(11:12)
        %26 = load(usize, %19)
        %27!= dbg_stmt(11:25)
        %28 = ptr_elem_val(%16, %26!)
        %29 = is_non_null(%28!)
        %42!= cond_br(%29!, poi {
          %30!= optional_payload([*:0]u8, %28)
          %32!= dbg_stmt(11:64)
          %33!= dbg_empty_stmt()
          %35!= dbg_stmt(11:46)
          %36 = load(usize, %19)
          %37!= dbg_stmt(11:57)
          %38 = add(%36!, @Air.Inst.Ref.one_usize)
          %39!= store(%19, %38!)
          %40!= br(%24, @Air.Inst.Ref.void_value)
        }, poi {
          %41!= br(%22, @Air.Inst.Ref.void_value)
        })
      })
      %43!= repeat(%23)
    })
  })
  %44!= dbg_stmt(12:34)
  %46 = bitcast([*][*:0]u8, %16!)
  %47 = alloc(*[*][*:0]u8)
  %48!= store(%47, %46!)
  %49 = bitcast(*const [*][*:0]u8, %47!)
  %50 = load(usize, %19)
  %51!= dbg_stmt(12:58)
  %52 = load([*][*:0]u8, %49!)
  %53 = ptr_add([*][*:0]u8, %52!, @Air.Inst.Ref.zero_usize)
  %54 = slice([][*:0]u8, %53!, %50!)
  %55!= dbg_var_val(%54, "envp")
  %56!= dbg_stmt(14:9)
  %57!= block(void, {
    %58!= dbg_stmt(16:59)
    %60 = slice_ptr([*][*:0]u8, %54)
    %61 = load(usize, %19!)
    %62!= dbg_stmt(16:64)
    %63 = ptr_add([*][*:0]u8, %60!, %61!)
    %64!= dbg_stmt(16:77)
    %65 = ptr_add([*][*:0]u8, %63!, @Air.Inst.Ref.one_usize)
    %66!= dbg_stmt(16:35)
    %67 = bitcast([*]elf.Elf64_auxv_t, %65!)
    %68!= dbg_var_val(%67, "auxv")
    %69!= dbg_stmt(18:9)
    %70 = alloc(*usize)
    %71!= store(%70, @Air.Inst.Ref.zero_usize)
    %72!= dbg_var_ptr(%70, "at_hwcap")
    %73!= dbg_stmt(19:9)
    %74 = block([]elf.Elf64_Phdr, {
      %75!= dbg_stmt(20:13)
      %76 = alloc(*usize)
      %77!= store(%76, @Air.Inst.Ref.zero_usize)
      %78!= dbg_var_ptr(%76, "i")
      %79!= dbg_stmt(21:13)
      %80 = alloc(*usize)
      %81!= store(%80, @Air.Inst.Ref.zero_usize)
      %82!= dbg_var_ptr(%80, "at_phdr")
      %83!= dbg_stmt(22:13)
      %84 = alloc(*usize)
      %85!= store(%84, @Air.Inst.Ref.zero_usize)
      %86!= dbg_var_ptr(%84, "at_phnum")
      %87!= block(void, {
        %88!= loop(noreturn, {
          %89!= block(void, {
            %90!= dbg_stmt(23:20)
            %91 = load(usize, %76)
            %92!= dbg_stmt(23:24)
            %93 = ptr_elem_val(%67, %91!)
            %94!= dbg_stmt(23:27)
            %95 = struct_field_val(%93!, 0)
            %96!= dbg_stmt(23:41)
            %97 = cmp_neq(%95!, <u64, 0>)
            %155!= cond_br(%97!, poi {
              %98!= block(void, {
                %99!= dbg_stmt(24:17)
                %100 = load(usize, %76)
                %101!= dbg_stmt(24:29)
                %102 = ptr_elem_val(%67, %100!)
                %103!= dbg_stmt(24:32)
                %104 = struct_field_val(%102!, 0)
                %105!= dbg_stmt(24:25)
                %109!= block(void, {
                  %144!= switch_br(%104!, [<u64, 5>] => {
                      %110!= dbg_stmt(25:37)
                      %111 = load(usize, %76)
                      %112!= dbg_stmt(25:52)
                      %113 = ptr_elem_val(%67, %111!)
                      %114!= dbg_stmt(25:55)
                      %115 = struct_field_val(%113!, 1)
                      %116!= dbg_stmt(25:60)
                      %117 = struct_field_val(%115!, 0)
                      %118 = bitcast(usize, %117!)
                      %119!= store(%84, %118!)
                      %120!= br(%109, @Air.Inst.Ref.void_value)
                    }, [<u64, 3>] => {
                      %121!= dbg_stmt(26:36)
                      %122 = load(usize, %76)
                      %123!= dbg_stmt(26:50)
                      %124 = ptr_elem_val(%67, %122!)
                      %125!= dbg_stmt(26:53)
                      %126 = struct_field_val(%124!, 1)
                      %127!= dbg_stmt(26:58)
                      %128 = struct_field_val(%126!, 0)
                      %129 = bitcast(usize, %128!)
                      %130!= store(%80, %129!)
                      %131!= br(%109, @Air.Inst.Ref.void_value)
                    }, [<u64, 16>] => {
                      %132!= dbg_stmt(27:37)
                      %133 = load(usize, %76)
                      %134!= dbg_stmt(27:52)
                      %135 = ptr_elem_val(%67, %133!)
                      %136!= dbg_stmt(27:55)
                      %137 = struct_field_val(%135!, 1)
                      %138!= dbg_stmt(27:60)
                      %139 = struct_field_val(%137!, 0)
                      %140 = bitcast(usize, %139!)
                      %141!= store(%70, %140!)
                      %142!= br(%109, @Air.Inst.Ref.void_value)
                    }, else => {
                      %143!= br(%98, @Air.Inst.Ref.void_value)
                    }
                  )
                } %104!)
                %145!= dbg_stmt(30:13)
                %146!= dbg_empty_stmt()
                %147!= br(%98, @Air.Inst.Ref.void_value)
              })
              %148!= dbg_stmt(23:54)
              %149 = load(usize, %76)
              %150!= dbg_stmt(23:56)
              %151 = add(%149!, @Air.Inst.Ref.one_usize)
              %152!= store(%76, %151!)
              %153!= br(%89, @Air.Inst.Ref.void_value)
            }, poi {
              %76! %70!
              %154!= br(%87, @Air.Inst.Ref.void_value)
            })
          })
          %156!= repeat(%88)
        })
      } %76! %70!)
      %157!= dbg_stmt(31:13)
      %159 = load(usize, %80!)
      %160!= dbg_stmt(31:42)
      %161 = bitcast([*]elf.Elf64_Phdr, %159!)
      %162 = alloc(*[*]elf.Elf64_Phdr)
      %163!= store(%162, %161!)
      %164 = bitcast(*const [*]elf.Elf64_Phdr, %162!)
      %165 = load(usize, %84!)
      %166!= dbg_stmt(31:63)
      %167 = load([*]elf.Elf64_Phdr, %164!)
      %168 = ptr_add([*]elf.Elf64_Phdr, %167!, @Air.Inst.Ref.zero_usize)
      %169 = slice([]elf.Elf64_Phdr, %168!, %165!)
      %170!= br(%74, %169!)
    } %70!)
    %171!= dbg_var_val(%74, "phdrs")
    %172!= dbg_stmt(37:13)
    %174!= dbg_stmt(43:21)
    %176 = bitcast(?[*]elf.Elf64_auxv_t, %67!)
    %177!= store(<*?[*]elf.Elf64_auxv_t, os.linux.elf_aux_maybe>, %176!)
    %178!= dbg_stmt(45:13)
    %180!= dbg_stmt(59:40)
    %188!= call(<fn ([]elf.Elf64_Phdr) void, (function 'initStatic')>, [%74])
    %190!= dbg_stmt(66:24)
    %191!= call(<fn ([]elf.Elf64_Phdr) void, (function 'expandStackSize')>, [%74!])
    %192!= dbg_stmt(68:9)
    %195!= dbg_var_val(<?[*]*const fn () callconv(.c) void, @as([*]*const fn () callconv(.c) void, @ptrCast(__init_array_start))>, "opt_init_array_start")
    %196!= dbg_stmt(72:9)
    %199!= dbg_var_val(<?[*]*const fn () callconv(.c) void, @as([*]*const fn () callconv(.c) void, @ptrCast(__init_array_end))>, "opt_init_array_end")
    %200!= dbg_stmt(76:13)
    %201!= block(void, {
      %202!= dbg_var_val(<[*]*const fn () callconv(.c) void, @as([*]*const fn () callconv(.c) void, @ptrCast(__init_array_start))>, "init_array_start")
      %203!= dbg_stmt(77:54)
      %204!= dbg_var_val(<[*]*const fn () callconv(.c) void, @as([*]*const fn () callconv(.c) void, @ptrCast(__init_array_end))>, "init_array_end")
      %205!= dbg_stmt(78:64)
      %206 = int_from_ptr(<[*]*const fn () callconv(.c) void, @as([*]*const fn () callconv(.c) void, @ptrCast(__init_array_end))>)
      %207 = int_from_ptr(<[*]*const fn () callconv(.c) void, @as([*]*const fn () callconv(.c) void, @ptrCast(__init_array_start))>)
      %208 = sub_wrap(%206!, %207!)
      %209 = div_exact(%208!, <usize, 8>)
      %210!= dbg_stmt(78:43)
      %211 = slice([]*const fn () callconv(.c) void, <[*]*const fn () callconv(.c) void, @as([*]*const fn () callconv(.c) void, @ptrCast(__init_array_start))>, %209!)
      %212!= dbg_var_val(%211, "slice")
      %213 = alloc(*usize)
      %214!= store(%213, @Air.Inst.Ref.zero_usize)
      %215!= dbg_stmt(79:18)
      %216 = slice_len(usize, %211)
      %217!= block(void, {
        %218!= loop(noreturn, {
          %219 = load(usize, %213)
          %220!= block(void, {
            %221 = bitcast(u64, %219)
            %222 = bitcast(u64, %216)
            %223 = cmp_lt(%221!, %222!)
            %232!= cond_br(%223!, poi {
              %224 = slice_elem_val(%211, %219)
              %225!= dbg_var_val(%224, "func")
              %226!= dbg_stmt(79:36)
              %227!= call(%224!, [])
              %228!= dbg_stmt(79:37)
              %229!= dbg_empty_stmt()
              %230!= br(%220, @Air.Inst.Ref.void_value)
            }, poi {
              %213! %216! %211! %219!
              %231!= br(%217, @Air.Inst.Ref.void_value)
            })
          })
          %233 = add(%219!, @Air.Inst.Ref.one_usize)
          %234!= store(%213, %233!)
          %235!= repeat(%218)
        })
      } %213! %216! %211!)
      %236!= br(%201, @Air.Inst.Ref.void_value)
    })
    %237!= br(%57, @Air.Inst.Ref.void_value)
  } %19!)
  %238!= dbg_stmt(83:36)
  %239!= dbg_inline_block(void, <fn (usize, [*][*:0]u8, [][*:0]u8) callconv(.@"inline") u8, (function 'callMainWithArgs')>, {
    %240!= dbg_arg_inline(%2, "argc")
    %241!= dbg_arg_inline(%8, "argv")
    %242!= dbg_arg_inline(%54, "envp")
    %243!= dbg_stmt(2:11)
    %244 = alloc(*[*][*:0]u8)
    %245!= store_safe(%244, %8!)
    %246 = bitcast(*const [*][*:0]u8, %244!)
    %247!= dbg_stmt(2:23)
    %248 = load([*][*:0]u8, %246!)
    %249 = ptr_add([*][*:0]u8, %248!, @Air.Inst.Ref.zero_usize)
    %250 = cmp_lte(@Air.Inst.Ref.zero_usize, %2)
    %253!= block(void, {
      %254!= cond_br(%250!, likely {
        %255!= br(%253, @Air.Inst.Ref.void_value)
      }, cold {
        %249! %54!
        %251!= call(<fn (usize, usize) noreturn, (function 'startGreaterThanEnd')>, [@Air.Inst.Ref.zero_usize, %2!])
        %252!= unreach()
      })
    } %250!)
    %256 = cmp_lte(@Air.Inst.Ref.zero_usize, %2)
    %259!= block(void, {
      %260!= cond_br(%256!, likely {
        %261!= br(%259, @Air.Inst.Ref.void_value)
      }, cold {
        %249! %54!
        %257!= call(<fn (usize, usize) noreturn, (function 'outOfBounds')>, [@Air.Inst.Ref.zero_usize, %2!])
        %258!= unreach()
      })
    } %256!)
    %262 = slice([][*:0]u8, %249!, %2!)
    %263!= store_safe(<*[][*:0]u8, os.argv>, %262!)
    %264!= dbg_stmt(3:11)
    %265!= store_safe(<*[][*:0]u8, os.environ>, %54!)
    %266!= dbg_stmt(5:41)
    %267!= call(<fn () void, (function 'maybeEnableSegfaultHandler')>, [])
    %268!= dbg_stmt(6:23)
    %269!= call(<fn () void, (function 'maybeIgnoreSigpipe')>, [])
    %270!= dbg_stmt(8:20)
    %271!= dbg_inline_block(void, <fn () callconv(.@"inline") u8, (function 'callMain')>, {
      %272!= dbg_stmt(4:13)
      %276!= dbg_stmt(6:22)
      %277!= call(<fn () void, (function 'main')>, [])
      %278!= dbg_stmt(7:13)
      %279!= br(%271, @Air.Inst.Ref.void_value)
    })
    %280!= dbg_stmt(8:5)
    %281!= br(%239, @Air.Inst.Ref.void_value)
  } %8! %2! %54!)
  %282!= dbg_stmt(83:19)
  %283!= call(<fn (u8) noreturn, (function 'exit')>, [@Air.Inst.Ref.zero_u8])
  %284!= unreach()
# End Function AIR: start.posixCallMainAndExit