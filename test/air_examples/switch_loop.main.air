# Begin Function AIR: switch_loop.main:
# Total AIR+Liveness bytes: 1.1083984375KiB
# AIR Instructions:         51 (459B)
# AIR Extra Data:           94 (376B)
# Liveness tomb_bits:       32B
# Liveness Extra Data:      23 (92B)
# Liveness special table:   9 (72B)
  %0!= dbg_stmt(2:5)
  %1 = alloc(*usize)
  %2!= store_safe(%1, @Air.Inst.Ref.zero_usize)
  %3!= dbg_var_ptr(%1, "i")
  %4!= dbg_stmt(3:5)
  %7!= dbg_var_val(<[2]switch_loop.T, .{ .foo, .end }>, "tag")
  %8!= dbg_stmt(5:3)
  %9 = load(usize, %1)
  %10!= dbg_stmt(5:18)
  %11 = cmp_lt(%9, <usize, 2>)
  %14!= block(void, {
    %15!= cond_br(%11!, likely {
      %16!= br(%14, @Air.Inst.Ref.void_value)
    }, cold {
      %1!
      %12!= call(<fn (usize, usize) noreturn, (function 'outOfBounds')>, [%9!, <usize, 2>])
      %13!= unreach()
    })
  } %11!)
  %17 = array_elem_val(<[2]switch_loop.T, .{ .foo, .end }>, %9!)
  %18!= dbg_stmt(5:15)
  %49!= loop_switch_br(%17!, [<switch_loop.T, .end>] => {
      %1!
      %20!= dbg_stmt(6:13)
      %21!= ret_safe(@Air.Inst.Ref.void_value)
    }, [<switch_loop.T, .foo>] => {
      %22!= dbg_stmt(8:9)
      %23 = load(usize, %1)
      %24!= dbg_stmt(8:11)
      %25 = add_with_overflow(struct { usize, u1 }, %23!, @Air.Inst.Ref.one_usize)
      %26 = struct_field_val(%25, 1)
      %27 = cmp_eq(%26!, <u1, 0>)
      %30!= block(void, {
        %31!= cond_br(%27!, likely {
          %32!= br(%30, @Air.Inst.Ref.void_value)
        }, cold {
          %1! %25!
          %28!= call(<fn ([]const u8, ?*const builtin.StackTrace, ?usize) noreturn, (function 'defaultPanic')>, [<[]const u8, "integer overflow"[0..16]>, <?*const builtin.StackTrace, null>, <?usize, null>])
          %29!= unreach()
        })
      } %27!)
      %33 = struct_field_val(%25!, 0)
      %34!= store_safe(%1, %33!)
      %35!= dbg_stmt(9:9)
      %36 = load(usize, %1)
      %37!= dbg_stmt(9:25)
      %38 = cmp_lt(%36, <usize, 2>)
      %41!= block(void, {
        %42!= cond_br(%38!, likely {
          %43!= br(%41, @Air.Inst.Ref.void_value)
        }, cold {
          %1!
          %39!= call(<fn (usize, usize) noreturn, (function 'outOfBounds')>, [%36!, <usize, 2>])
          %40!= unreach()
        })
      } %38!)
      %44 = array_elem_val(<[2]switch_loop.T, .{ .foo, .end }>, %36!)
      %45!= switch_dispatch(%49, %44!)
    }, else .cold => {
      %1!
      %46!= dbg_stmt(5:15)
      %47!= call(<fn ([]const u8, ?*const builtin.StackTrace, ?usize) noreturn, (function 'defaultPanic')>, [<[]const u8, "switch on corrupt value"[0..23]>, <?*const builtin.StackTrace, null>, <?usize, null>])
      %48!= unreach()
    }
  )
# End Function AIR: switch_loop.main