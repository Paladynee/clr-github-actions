# Begin Function AIR: debug.getSelfDebugInfo:
# Total AIR+Liveness bytes: 709B
# AIR Instructions:         33 (297B)
# AIR Extra Data:           51 (204B)
# Liveness tomb_bits:       24B
# Liveness Extra Data:      10 (40B)
# Liveness special table:   5 (40B)
  %0!= dbg_stmt(2:9)
  %2 = load(?debug.SelfInfo, <*?debug.SelfInfo, debug.self_debug_info>)
  %3 = is_non_null(%2!)
  %32!= cond_br(%3!, poi {
    %4 = optional_payload_ptr(*debug.SelfInfo, <*?debug.SelfInfo, debug.self_debug_info>)
    %5!= dbg_var_val(%4, "info")
    %6!= dbg_stmt(3:9)
    %7 = wrap_errunion_payload(@typeInfo(@typeInfo(@TypeOf(debug.getSelfDebugInfo)).@"fn".return_type.?).error_union.error_set!*debug.SelfInfo, %4!)
    %8!= ret_safe(%7!)
  }, poi {
    %9!= dbg_stmt(5:66)
    %10 = call(<fn () mem.Allocator, (function 'getDebugInfoAllocator')>, [])
    %11!= dbg_stmt(5:44)
    %12 = call(<fn (mem.Allocator) error{MissingDebugInfo,UnsupportedOperatingSystem}!debug.SelfInfo, (function 'open')>, [%10!])
    %18 = try(%12, {
      %13 = unwrap_errunion_err(error{MissingDebugInfo,UnsupportedOperatingSystem}, %12!)
      %14!= dbg_stmt(5:27)
      %15 = bitcast(@typeInfo(@typeInfo(@TypeOf(debug.getSelfDebugInfo)).@"fn".return_type.?).error_union.error_set, %13!)
      %16 = wrap_errunion_err(@typeInfo(@typeInfo(@TypeOf(debug.getSelfDebugInfo)).@"fn".return_type.?).error_union.error_set!*debug.SelfInfo, %15!)
      %17!= ret_safe(%16!)
    } %12!)
    %19 = wrap_optional(?debug.SelfInfo, %18!)
    %20!= store_safe(<*?debug.SelfInfo, debug.self_debug_info>, %19!)
    %21!= dbg_stmt(6:32)
    %22 = is_non_null_ptr(<*?debug.SelfInfo, debug.self_debug_info>)
    %25!= block(void, {
      %26!= cond_br(%22!, likely {
        %27!= br(%25, @Air.Inst.Ref.void_value)
      }, cold {
        %23!= call(<fn ([]const u8, ?*const builtin.StackTrace, ?usize) noreturn, (function 'defaultPanic')>, [<[]const u8, "attempt to use null value"[0..25]>, <?*const builtin.StackTrace, null>, <?usize, null>])
        %24!= unreach()
      })
    } %22!)
    %28 = optional_payload_ptr(*debug.SelfInfo, <*?debug.SelfInfo, debug.self_debug_info>)
    %29!= dbg_stmt(6:9)
    %30 = wrap_errunion_payload(@typeInfo(@typeInfo(@TypeOf(debug.getSelfDebugInfo)).@"fn".return_type.?).error_union.error_set!*debug.SelfInfo, %28!)
    %31!= ret_safe(%30!)
  })
# End Function AIR: debug.getSelfDebugInfo
