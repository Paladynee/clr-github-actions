# Begin Function AIR: intfloat.main:
# Total AIR+Liveness bytes: 644B
# AIR Instructions:         32 (288B)
# AIR Extra Data:           47 (188B)
# Liveness tomb_bits:       16B
# Liveness Extra Data:      6 (24B)
# Liveness special table:   3 (24B)
  %0!= dbg_stmt(2:5)
  %1 = alloc(*u8)
  %2!= store_safe(%1, <u8, undefined>)
  %3!= dbg_var_ptr(%1, "x")
  %4!= dbg_stmt(3:5)
  %5!= store_safe(%1, <u8, 10>)
  %6!= dbg_stmt(4:5)
  %7 = load(u8, %1!)
  %8!= dbg_stmt(4:20)
  %9 = float_from_int(f32, %7!)
  %10!= dbg_var_val(%9, "y")
  %11!= dbg_stmt(5:21)
  %12 = fpext(f64, %9!)
  %13!= dbg_var_val(%12, "y2")
  %14!= dbg_stmt(6:21)
  %15 = fptrunc(f16, %12!)
  %16!= dbg_var_val(%15, "y3")
  %17!= dbg_stmt(7:19)
  %18 = int_from_float(u8, %15)
  %19 = float_from_int(f16, %18)
  %20 = sub(%15!, %19!)
  %21 = cmp_lt(%20, <f16, 1>)
  %22 = cmp_gt(%20!, <f16, -1>)
  %23 = bool_and(%21!, %22!)
  %26!= block(void, {
    %27!= cond_br(%23!, likely {
      %28!= br(%26, @Air.Inst.Ref.void_value)
    }, cold {
      %18!
      %24!= call(<fn ([]const u8, ?*const builtin.StackTrace, ?usize) noreturn, (function 'defaultPanic')>, [<[]const u8, "integer part of floating point value out of bounds"[0..50]>, <?*const builtin.StackTrace, null>, <?usize, null>])
      %25!= unreach()
    })
  } %23!)
  %29!= dbg_var_val(%18, "z")
  %30!= dbg_stmt(8:5)
  %31!= ret_safe(%18!)
# End Function AIR: intfloat.main